*args => all the arguments that was given there (positional arguments)
**kwargs => all the arguments in the key value pair (keyword arguments).
we can also return multiple parameters from the fucntion.
example :-  def multiply(a,b):
                return a*b,a

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
lambda function -> function ko short me likhne na tarike in a single line
ex:- addition = lambda x,y,z:x+y+z
additiont(2,3,4) o/p = 9
same work krega jo ye funtion krega 
def addtion(x,y,z):
       return x+y+z
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
map()-> applies a function in all items in the list
numbers = [1,2,3,4,5,6,7]
map(lamda x:x**2)
lazy loading technique follow krta hain means its not completely initilize.
to initialise it we use list function
list(map(lamda x:x**2),numbers)   //sare items dedega ka square jo numbers me hain

### defination of map() Function in python ###
The map() function applies a given function to all items in an input list(or any other iterable) and returns a map object (an iterator). 
This is particularly useful for transforming data in a list comprehensively.

### Map multiple iterables
numbers1 = [1,2,3]
numbers2 = [4,5,6]
added_numbers = map(lambda x,y:x+y, numbers1,numbers2))
O/p -> [5,6,7]
type casting bhi kr sakte ho isme
list(map(int,str_numbers)) //sare string no. ke integer me convert hojayenge
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
filter() => filter out krega content ko 
list(filter(lambda x:x>5 and x%2 , numbers)) ##jitne bhi 5 se bade even h numbers me wo dedega ye 




